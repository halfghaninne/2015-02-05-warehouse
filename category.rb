require 'pry'
require 'sqlite3'

DATABASE = SQLite3::Database.new("warehouse_mgr.db")

# Class: Category
#
# Creates new category objects/records for categories table in warehouse_mgr database
# 
# Attributes:
# + @id     - Integer: 
# + @name   - String: 
#
# Public Methods:
# ???
#
# Private Methods:
# + insert

class Category
  
  attr_reader :id
  
  # Public or Private?: .initialize
  # Gathers arguments (field values) in an options Hash; automatically inserts them into the categories table via private method .insert
  #
  # Parameters:
  # + options = {name: String} ##Should we include id? User should never input##
  #
  # Returns: 
  # ???
  # 
  # State Changed:
  # ???
  
  def initialize(options)
    @name = options[:name]
    insert
  end
  
  private
  
  # Private: .insert
  # Syntax to enter the Ruby object's arguments as a records' field values via sqlite3
  #
  # Parameters:
  #
  # Returns: 
  # Integer - @id, "id" field value, generated by table upon creation and pulled from the record
  # 
  # State Changed:
  # ???
  
  def insert
    DATABASE.execute("INSERT INTO categories (name) VALUES ('#{@name}')")
       @id = DATABASE.last_insert_row_id
  end
  
end

